def S(X){
    return {X} | X;
};

def pred(X){
    return ||X;
};

def add(X,Y){
    res = {};
    for (i={}; i!=X; i = S(i);){
        res = S(res);
    };

    for (i={}; i!=Y; i = S(i);){
        res = S(res);
    };

    return res;
};

def mul(X,Y){
    res = {};
    for (i={}; i!=X; i = S(i);){
        res = add(res, Y);
    };

    return res;
};

def sub(X, Y){
    for(i={}; i!=Y; i = S(i);){
        X = ||X;
    };

    return X;
};

def div(X,Y){
    count = zero();
    while (geq(X,Y)){
        X = sub(X, Y);
        count = S(count);
    };

    return <count, X>;
};

def leq(X, Y){
    while ((X != Y) | (Y != {})){
        Y = pred(Y);
    };

    out = {};
    if (X != Y){
        out = {{}};
    } else {
    };

    return out;
};

def lt(X, Y){
    if (X == Y){
        out = {{}};
    } else {
        out = leq(X,Y);
    };
    return out;
};

def gt(X,Y){
    t = leq(X, Y);
    if (t == {}){
        t = {{}};
    }
    else{
        t = {};
    };

    return t;

};

def geq(){
    t = lt(X, Y);
    if (t == {}){
        t = {{}};
    }
    else{
        t = {};
    };

    return t;

};

def zero(){
    return {};
};

def one(){
    return S(zero());
};